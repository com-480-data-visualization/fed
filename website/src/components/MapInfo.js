import React from "react";
import "../style/map-info.css";

export default function MapInfo({ info }) {
  // If there is no info, don't render anything
  if (!info) return null;

  if (!info.iata_to) {
    if (info.mode === "train") {
      info.iata_to = info.from;
      info.from = "Train Station";

      info.iata_from = info.to;
      info.to = "Train Station";
    } else {
      info.iata_to = info.from;
      info.from = "Car";
      info.iata_from = info.to;
      info.to = "Car";
    }
  }

  const planeSvg = (
    <svg version="1.1" width="40" height="40" viewBox="0 0 1.46533 1.25049">
      <g>
        <rect height="1.25049" opacity="0" width="1.46533" x="0" y="0" />
        <path
          d="M1.46533 0.625C1.46484 0.553223 1.3667 0.500977 1.24951 0.500977L0.998535 0.500977C0.964355 0.500977 0.95166 0.495117 0.930664 0.472168L0.518555 0.0219727C0.505859 0.0078125 0.489746 0 0.472168 0L0.400391 0C0.384277 0 0.375488 0.0141602 0.383301 0.03125L0.595215 0.500977L0.276855 0.536133L0.166016 0.33252C0.157227 0.317383 0.14502 0.311035 0.125 0.311035L0.0976562 0.311035C0.081543 0.311035 0.0712891 0.320312 0.0712891 0.336914L0.0712891 0.913086C0.0712891 0.929199 0.081543 0.938965 0.0976562 0.938965L0.125 0.938965C0.14502 0.938965 0.157227 0.932129 0.166016 0.91748L0.276855 0.713867L0.595215 0.749023L0.383301 1.21875C0.375488 1.23535 0.384277 1.24951 0.400391 1.24951L0.472168 1.24951C0.489746 1.24951 0.505859 1.2417 0.518555 1.22754L0.930664 0.777344C0.95166 0.754395 0.964355 0.749023 0.998535 0.749023L1.24951 0.749023C1.3667 0.749023 1.46484 0.696289 1.46533 0.625Z"
          fill="#FF3B31"
          fill-opacity="1"
        />
      </g>
    </svg>
  );

  const trainSvg = (
    <svg version="1.1" width="40" height="40" viewBox="0 0 70 40">
      <g>
        <rect height="1.25049" opacity="0" width="1.46533" x="0" y="0" />
        <path
          d="M0 32.1289C0 36.9922 2.48047 39.4727 7.42188 39.4727L56.1719 39.4727C64.1797 39.4727 68.418 34.6289 68.418 29.0039C68.418 25.6055 66.9727 21.9727 63.7891 18.8086L53.1641 8.28125C46.7188 1.91406 42.5586 0 34.9414 0L7.42188 0C2.48047 0 0 2.48047 0 7.34375ZM26.3086 20.0977L26.3086 10.4492C26.3086 9.00391 27.168 8.16406 28.6328 8.16406L35.9766 8.16406C42.7734 8.16406 46.2695 9.02344 49.9219 12.6562L56.1523 18.8477C57.6172 20.3125 56.7969 22.3438 55.1562 22.3438L28.6328 22.3438C27.168 22.3438 26.3086 21.5039 26.3086 20.0977Z"
          fill="#27CD41"
          fill-opacity="1"
        />
      </g>
    </svg>
  );

  const carSvg = (
    <svg version="1.1" width="50.3555" height="35.3086" viewBox="0 0 60 50">
      <g>
        <rect height="46.3086" opacity="0" width="59.3555" x="0" y="0" />
        <path
          d="M11.2109 15.6055C11.0156 16.4258 11.3477 16.8164 12.2852 16.7578C16.4258 16.4648 21.1719 16.25 29.4922 16.25C37.8125 16.25 42.5586 16.4648 46.6992 16.7578C47.6367 16.8164 47.9688 16.4258 47.793 15.6055C47.1289 12.6953 45.9961 9.31641 45.1953 7.92969C44.5117 6.73828 43.6719 6.15234 42.1875 5.9375C40.3125 5.68359 36.0938 5.52734 29.4922 5.52734C22.8906 5.52734 18.6719 5.68359 16.7969 5.9375C15.3125 6.15234 14.4727 6.73828 13.7891 7.92969C13.0078 9.31641 11.8555 12.6953 11.2109 15.6055ZM11.3281 32.6367C13.5156 32.6367 15.1758 30.9961 15.1758 28.7891C15.1758 26.6016 13.5156 24.9414 11.3281 24.9414C9.12109 24.9414 7.46094 26.6016 7.46094 28.7891C7.46094 30.9961 9.12109 32.6367 11.3281 32.6367ZM22.9492 31.7969L36.0352 31.7969C37.6758 31.7969 38.8086 30.6641 38.8086 29.043C38.8086 27.4023 37.6758 26.2695 36.0352 26.2695L22.9492 26.2695C21.3086 26.2695 20.1953 27.4023 20.1953 29.043C20.1953 30.6641 21.3086 31.7969 22.9492 31.7969ZM47.6758 32.6367C49.8633 32.6367 51.5234 30.9961 51.5234 28.7891C51.5234 26.6016 49.8633 24.9414 47.6758 24.9414C45.4688 24.9414 43.8086 26.6016 43.8086 28.7891C43.8086 30.9961 45.4688 32.6367 47.6758 32.6367ZM29.4922 39.4922C37.8516 39.4922 49.082 39.0625 53.8477 38.5156C57.1289 38.1445 58.9844 36.3867 58.9844 33.2227L58.9844 28.7891C58.9844 24.4727 58.0664 22.168 55.8398 19.2773L53.6914 16.4844C52.7734 11.9531 51.0938 7.16797 50.2148 5.3125C48.8867 2.48047 46.2891 0.898438 43.0859 0.46875C41.3867 0.234375 35.8008 0.0976562 29.4922 0.0976562C23.1836 0.0976562 17.5977 0.253906 15.8984 0.46875C12.6953 0.859375 10.0977 2.48047 8.76953 5.3125C7.89062 7.16797 6.23047 11.9531 5.29297 16.4844L3.14453 19.2773C0.917969 22.168 0 24.4727 0 28.7891L0 33.2227C0 36.3867 1.85547 38.1445 5.13672 38.5156C9.90234 39.0625 21.1328 39.4922 29.4922 39.4922ZM29.4922 36.6211C21.0742 36.6211 10.0391 36.2305 5.85938 35.7031C3.67188 35.4492 2.87109 34.375 2.87109 32.4414L2.87109 28.7891C2.87109 25.293 3.4375 23.6328 5.42969 21.0352L7.96875 17.6953C8.69141 13.8672 10.332 8.80859 11.3672 6.62109C12.2266 4.80469 13.8672 3.67188 16.25 3.37891C17.8516 3.20312 23.0078 2.96875 29.4922 2.96875C35.9766 2.96875 41.2109 3.20312 42.6953 3.37891C45.1367 3.69141 46.7578 4.82422 47.6172 6.62109C48.6719 8.80859 50.293 13.8672 51.0156 17.6953L53.5547 21.0352C55.5469 23.6328 56.1133 25.293 56.1133 28.7891L56.1133 32.4414C56.1133 34.375 55.3125 35.4492 53.125 35.7031C48.9453 36.2109 37.9297 36.6211 29.4922 36.6211ZM4.57031 46.3086L7.5 46.3086C9.35547 46.3086 10.7812 44.8828 10.7812 43.0469L10.7812 37.3633L1.28906 36.0156L1.28906 43.0469C1.28906 44.8633 2.71484 46.3086 4.57031 46.3086ZM51.4844 46.3086L54.4141 46.3086C56.2695 46.3086 57.6953 44.8828 57.6953 43.0469L57.6953 36.0156L48.2031 37.3633L48.2031 43.0469C48.2031 44.8828 49.6289 46.3086 51.4844 46.3086Z"
          fill="#ffcc00"
        />
      </g>
    </svg>
  );

  let svg = planeSvg;
  if (info.mode === "train") {
    svg = trainSvg;
  } else if (info.mode === "car") {
    svg = carSvg;
  }

  const alternative_co2 = (
    (0.251 * (info.alternative_distance / 1000)) /
    1000
  ).toFixed(2);
  let alternative = (
    <div>
      <h2 className="alternative">Alternative by driving/traffic</h2>
      <div className="stat">
        <span className="label">ðŸ“Œ Distance </span>
        <span className="value">
          {(info.alternative_distance / 1000).toFixed(0)} km
        </span>
      </div>
      <div className="stat">
        <span className="label">ðŸ•’ Duration </span>
        <span className="value">
          {(info.alternative_duration / 3600).toFixed(1)} hours
        </span>
      </div>
      <div className="stat">
        <span className="label">ðŸ’¨ CO2 </span>
        <span className="value">{alternative_co2} tons</span>
      </div>
    </div>
  );

  if (info.alternative_duration < 0 || info.alternative_distance < 0) {
    alternative = null;
  }

  return (
    <div className="infoBox">
      <div className="flight-info">
        <div className="city">
          <span className="iata-code">{info.iata_to}</span>
          <span className="city-name">{info.from}</span>
        </div>
        <span className="separator"></span>
        <div className="plane-icon">{svg}</div>
        <span className="separator"></span>
        <div className="city">
          <span className="iata-code">{info.iata_from}</span>
          <span className="city-name">{info.to}</span>
        </div>
      </div>
      <div className="numbers">
        <div className="stat">
          <div className="label">ðŸ“Œ Distance</div>
          <div className="value">
            {" "}
            {info.distance.toFixed(0).toLocaleString()} km
          </div>
        </div>
        <div className="stat">
          <span className="label">ðŸ•’ Duration </span>
          <span className="value">
            {info.duration.toFixed(1).toLocaleString()} hours
          </span>
        </div>
        <div className="stat">
          <span className="label">ðŸ’¨ CO2</span>
          <span className="value">
            {info.co2.toFixed(2).toLocaleString()} tons
          </span>
        </div>
        <div>{alternative}</div>
        {/* <div>
          <button>Go to destination</button>
        </div> */}
      </div>
    </div>
  );
}
